Lab 6 Write-Up
Qingxia Guo, Qingyang Wang

1.

1.1 PERNUM
Because Titan has a pernum feature, we had to map values to separate PER and NUM in the semi.vpm. After demo day,
when we figured out that we were spelling PER wrong, we ended up having the following lines in our semi.vpm:

    PNG.PERNUM : PER NUM
      3pc >> third pl
      2pc >> second pl
      1pc_excl >> first pl
      1pc_incl >> first pl
      1pc >> first pl
      3sg <> third sg
      2sg <> second sg
      1sg <> first sg
      3du >> third pl
      2du >> second pl
      1du_excl >> first pl
      1du_incl >> second pl
      1du >> first pl
      3pl <> third pl
      2pl <> second pl
      1pl_excl >> first pl
      1pl_incl >> first pl
      1pl <> first pl
      3rd <> third !
      2nd <> second !
      2nd << second *
      1st <> first !
      1st << first *
      sg <> * sg
      pl <> * pl
      du >> * pl
      pc >> * pl
      * <> * *

Since English does not have the dual and paucal numbers, we mapped all instances of dual and paucal number on the
internal side to plural number on the external side. We also bidirectionally mapped plural number on the internal and
external side to each other. So, a translation from eng to ttv with a sentence with plural number would only generate
sentences with plural number. On the other hand, a translation from ttv to eng for any sentence with nonsingular number
would generate a sentence with plural number.

Additionally, in the 1st person, Titan makes a distinction between inclusive and exclusive.
This distinction is not present in English. So, we mapped both 1st person exclusive and inclusive on the internal side
to just 1st person on the external side. A ttv to eng translation with a sentence with 1st person exclusive would generate
a 1st person sentence. This means that we lose exclusivity information when going from Titan to English.

To exemplify the above two decisions, below is the part of our semi.vpm file that maps paucal person on the internal side:

    3pc >> third pl
    2pc >> second pl
    1pc_excl >> first pl
    1pc_incl >> first pl
    1pc >> first pl


1.2 Tense
For tense, Titan has a non-future tense and does not make distinction between past and present. To reflect this,
we added the following lines to our semi.vpm file:

      nfut <> non-future
      nfut << present
      nfut << past

This means that in an eng to ttv translation of a sentence with either past or present tense, we would generate
a sentence with non-future tense in Titan.

1.3 Aspect
Finally, for aspect:
Originally, we got a lot of extra sentence generations when translating from eng to ttv, as a result of
having a lot of aspectual auxiliaries in Titan. Besides work on our grammar to add the appropriate aspect values
on said auxiliaries, we also added the following line in our semi.vpm file:

     noaspect << *

This makes it so that English sentences with no aspect will not generate sentences with all kinds of auxiliaries in Titan.


2.

2.1
Besides the auxiliaries that mark a verb for agreement in person and number, Titan has a few other auxiliaries.
A lot of auxiliaries that were auto-generated by the choices file were either erroneous or not appropriately constrained.
As a result, in our MT output from eng to ttv, a lot of extra sentences were generated, with inappropriate auxiliaries
preceding the verb, instead of the agreement auxiliaries. This is because we said that Titan VPs must be finite, but
since all our auxiliaries were marked as finite, sentences with any random auxiliary, including those with
no agreement auxiliary, were allowed.

First, we deleted some auxiliaries that were not auxiliaries at all. We deleted the following:
tarani, keiny, itiqi, buon, k'. We were not super sure about "k'", but we decided to delete it since we found
no mentions of it in the reference grammar, and it only appeared one time in the item file.
Also, the auto-generation seemed to mistake words that meant
"pot" to be potential markers, and mistakenly analyzed them as auxiliaries, so we deleted those.
Additionally, we added aspect information
to other auxiliaries. For example, we added an aspect feature with perfective value to the perfective markers kune (1sg),
kone (2sg), and kine (3sg). Below is the choices file information for kune:

      aux18_name=aux18_pfv_1sg
      aux18_sem=no-pred
        aux18_feat1_name=aspect
        aux18_feat1_value=pfv
        aux18_feat1_head=verb
        aux18_feat2_name=form
        aux18_feat2_value=finite
        aux18_feat2_head=verb
        aux18_feat3_name=pernum
        aux18_feat3_value=1sg
        aux18_feat3_head=subj
      aux18_subj=np-comp-case
        aux18_compfeature1_name=form
        aux18_compfeature1_value=nonfinite
        aux18_stem1_orth=kune


Titan also has serial verb markers, for example "la", which marks motion, and "tu", which marks progressive or habitual
action. These auxiliaries can not appear on their own, but will appear along with an agreement-marking auxiliary, as shown
in the following sentences:

  (#71 from testsuite)
  judgment:g
  ala la panawe bue
  3pl go steal betel_nuts
  "They went and stole betel nuts"

  (#73 from testsuite)
  judgment:g
  i tu alisai
  3sg prog laugh
  "She was laughing"

In contrast, the following are ungrammatical:

    (#72 from testsuite)
    judgment: u
    la panawe bue
    go steal betel_nuts
    "They went and stole betel nuts"

    (#74 from testsuite)
    judgment: u
    tu alisai
    prog laugh
    "She was laughing"

For auxiliaries such as these, we added appropriate aspect values and predications. We also changed their
aspect value to nonfinite, so that a sentence with only these auxiliaries will not be licensed. For example,
the following is the choices snippet for "la":

        aux2_name=aux2
        aux2_sem=add-pred
          aux2_feat1_name=tense
          aux2_feat1_value=pres
          aux2_feat1_head=verb
          aux2_feat2_name=aspect
          aux2_feat2_value=ipfv
          aux2_feat2_head=verb
          aux2_feat3_name=form
          aux2_feat3_value=nonfinite
          aux2_feat3_head=verb
        aux2_subj=np
          aux2_compfeature1_name=form
          aux2_compfeature1_value=nonfinite
          aux2_stem1_orth=la
          aux2_stem1_pred=_be-or-become-or-go_v_rel

However, currently our grammar will not parse sentences that use these serial verb markers, such as "ala la panawe bue".
Originally, our ttv.tdl file had the following constraint:

subj-raise-aux-no-pred := subj-raise-aux & raise-sem-lex-item &
  [ ARG-ST < [ ],
             [ LOCAL.CAT.HEAD.AUX - ,
              OPT -] > ].


We decided to remove the AUX- constraint. So:

subj-raise-aux-no-pred := subj-raise-aux & raise-sem-lex-item &
  [ ARG-ST < [ ],
             [ OPT -] > ].

We thought that this would not cause issues because we said that the verb agreement markers (for example "ala" and "i", which
inherit from subj-raise-aux-no-pred) have the constraint that their complement must be non-finite. These markers are
themselves finite. So, a sentence like the following would not be able to form.

      (#75 from testsuite)
      judgment: u
      ala i alisai.
      3pl 3sg laugh
      "They laughed"

However, even after this, "ala la panawe bue" still does not parse, and we are not really sure why. It seems to be
due to something going on with our verb position classes. We think that our current verb position classes are not doing
anything, but we did not want to just delete all of them in case they were doing something. Also, we did not have further
time to look at this issue at the moment.


2.2 Refinements to adnominal possession
While we implemented adnominal possession in a previous lab, there was one morphophonological phenomenon we were not able
to implement until now. This phenomenon involved the possession strategy for inalienable nouns, such as body parts and
family members. If the possessor has a pernum value of 1sg, the possessive suffix has either form "-o" or null form,
depending on the phonological form of the possessum. If the possessed noun ends in "a", that vowel is replaced by the suffix
"-o". Otherwise, the suffix has null form.

For example, below is the difference between the inalienable nouns "pala" (head) and "yaye" (mother)

    (#76 from testsuite)
    judgement: g
    palo i alisai
    head-1sg.poss 3sg laugh
    'his/her head laughed'

    (#77 from testsuite)
    judgement: u
    pala i alisai
    head 3sg laugh
    'his/her head laughed'

    (#78 from testsuite)
    judgement: g
    yaye i alisai
    mother-1sg.poss 3sg laugh
    'Your mother laughed'

    (#79 from testsuite)
    judgement: u
    yayo i alisai
    mother-1sg.poss 3sg laugh
    'Your mother laughed'

In our irules.tdl file, we defined a letter set !a that consisted of every character that is not "a":

    %(letter-set (!a bcedfghijklmnopqrstuvwxyz))

Then, also in irules.tdl, for the inalienable 1sg suffix, we have the following:
    inalienable_1sg_a-suffix :=
    %suffix (a o) (!a !a)
    inalienable_1sg_a-lex-rule.

As a result, "palo i alisai" and "yaye i alisai", the grammatical sentences above, now parse, while the ungrammatical
ones do not. Additionally, "pala-o i alisai", which was our previous solution to this phenomenon, no longer parses.



2.3 Haplology
In Titan, some auxiliary verb agreement markers have the same form as free pronouns. Titan is not really a pro-drop
language. However, in cases where a free pronoun and the following verb marker have the same form, one of them is dropped.
We chose to analyze this kind of case as subject-dropping. For example, the following sentence is ungrammatical:

    (#13 from testsuite)
    judgement: u
    i i alisai
    3sg 3sg laugh
    'he laughed'

The above sentence would have to be realized like this:

    (#80 from testsuite)
    judgement: g
    i alisai
    3sg laugh
    'he laughs'

In order to represent this, for each verb-marking auxiliary which is homophonous with a free pronoun (which was
most of them), we added a constraint so that their subjects must be PRON -. This means that these auxiliary markers
can only be compatible with non-pronoun subjects or subject-dropped sentences.
Below is the snippet from ttv.tdl for the auxiliary class that contains the 3sg verb marker "i",
which is homophonous with the 3sg free pronoun "i":

      aux17_3sg-aux-lex := subj-raise-aux-no-pred & verb-pc9-rule-dtr &
        [ SYNSEM.LOCAL [ CONT.HOOK.INDEX.E.TENSE nfut,
                         CAT [ HEAD.FORM finite,
                             	VAL [ SUBJ.FIRST.LOCAL [CAT.HEAD.PRON - ,
      			                         CONT.HOOK.INDEX.PNG.PERNUM 3sg],
                                     COMPS.FIRST.LOCAL.CAT.HEAD.FORM nonfinite ] ] ],
          INFLECTED.VERB-PC9-FLAG - ].

As a result of this change, sentences like "i i alisai" no longer parse in our grammar, but sentences like "i alisai"
still do.

2.4 Other changes

2.4.1 Extra lexical entries
Because we did not have words that matched some predication values for the machine translation sentences, we
added some in last week's lab. For example, we did not have a word for "chase", so we added an extra entry with the same form
as "voliliti", which means "follow", with the new meaning "chase". However, this meant we had 2 lexical entries
for "voliliti", one for follow and one for chase. Following feedback from last week's lab, we removed the original entries
for words such as these.

We also changed the entries for the rest of the relevant words:
We changed "manuai" from "_osprey_n_rel" to "_cat_n_rel".
We changed "dilen" from "_canoe_n_rel" to "_car_n_rel".
We changed "das" from "_ocean_n_rel" to "_park_n_rel".

2.4.2 Bare-NP rule
Last week, we modified the Bare-NP rule so that any noun that goes through this rule ends up with a number value of sg.
This is so we could reflect the fact that in Titan, a verb that is not explicitly marked with a number-marking determiner
is syntactically singular. However, as a result of this, any pronoun that went through this rule became singular,
which is not what we want. So, we split up our rule into two bare-np rules, one for common nouns and one for pronouns.

For non-pronouns, we have the following:

    bare-np-phrase := basic-bare-np-phrase &
      [ C-CONT.RELS.LIST < [ PRED "exist_q_rel" ] >,
        SYNSEM [LIGHT - ,
        	   LOCAL [CAT.HEAD.PRON - ,
       	    CONT.HOOK.INDEX.PNG.PERNUM sg]]].

This rule only applies to nouns that are PRON -, and constrains the number to be sg.


For pronouns, on the other hand, there is another rule:

    bare-np-pron-phrase := basic-bare-np-phrase &
      [ C-CONT.RELS.LIST < [ PRED "exist_q_rel" ] >,
        SYNSEM [LIGHT - ,
        	   LOCAL.CAT.HEAD.PRON + ]].

This rule only applies to nouns that are PRON +, and does not place any constraints on the number.

To make the first rule (for non-pronouns) work, we had to add the PRON - feature to non-pronouns. For example,
the following noun class is for alienable common nouns: (It is now PRON -)
      noun1_alienable-noun-lex := noun-lex &
        [ SYNSEM.LOCAL [ CAT.HEAD.PRON -,
             CONT.HOOK.INDEX.PNG.PERNUM 3rd ] ].

We also added the PRON - value to other classes of common nouns
(noun109_inalienable_noa-noun-lex and noun110_inalienable_a-noun-lex), as well as place names (noun41_place-noun-lex).

2.4.3 Possession being analyzed as questions
In the previous lab, we had an issue where, when a sentence involved possession, it got 2 parses: one normal, and one
that was analyzed as a question. After feedback, we edited ttv.tdl so that possession rules inherited from
same-non-local-lex-rule. For example, here is a tdl snippet for one such possession rule:

    poss_inal_non1-lex-rule-super := infl-lex-rule & same-non-local-lex-rule &

As a result, a sentence like "manaon eala i ciri" (grammatical, #20 from testsuite) used to have 2 parses, but now only has 1.
However, "manaon e Pamei i ciri" (grammatical, #23 from testsuite) still has an extra question parse. It seems it is because we
added the above inheritance to the possession pronoun rules, which do not affect the possession strategy defined for this
sentence.

2.4.4 Subordination

  (#16 from testsuite)
  judgment: g
	Pamei i ra alan manaon i ciri
	Pamei 3sg jump egg 3sg break
	'Because Pamei jumped, the egg hatched'

In the last lab, we got many extra parses for this sentence. We added the following to our ttv.tdl:

  adposition-subord-lex-item := single-rel-lex-item & norm-ltop-lex-item & basic-icons-lex-item & non-local-none-lex-item &

As a result of this change, as well as us getting rid of an extra lexical entry for "ra", this sentence now has only one
parse.

3. Runs on the test corpus and test suite:

Initial run:

Test corpus:
After setting a condition on sentence length, we processed 934 sentences.
number of items parsed: 76
average number of parses per parsed item: 4.11
most ambiguous item: 81
sources of ambiguity: coordination ambiguity, as per usual

Test suite:
(total of 80 items)
number of items parsed: 33
average number of parses per parsed item: 4.53
most ambiguous item: 141
sources of ambiguity: coordination ambiguity, as per usual

Final run:

Test corpus:
After setting a condition on sentence length, we processed 934 sentences.
number of items parsed: 93
average number of parses per parsed item: 3.23
most ambiguous item: 27
NEW sources of ambiguity: One source of ambiguity that we didn't notice before, but is very prominent,
is the complement of the verb "va". "va" can take either a NP complement or a VP, so the sentence
"dasi-n i va yo ku la lie" (#473 from test corpus) is very ambiguous, because the complement of the verb
"va" could either be just the pronoun "yo", or the sentence "yo ku la lie" (which is the intended parse).

Test suite:
(total of 80 items)
number of items parsed: 38
average number of parses per parsed item: 2.97
most ambiguous item: 124
NEW sources of ambiguity: none?
